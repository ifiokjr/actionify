# This file was autogenerated with actionify@0.0.0
# To update run:
# deno run -Ar https://deno.land/x/actionify/cli.ts

name: ci
'on':
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
env:
  DENO_DIR: ${{ join([github.workspace, '../deno_cache'], '') }}
jobs:
  test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 5
    strategy:
      matrix:
        deno:
          - v1.x
          - canary
        os:
          - macos-latest
          - ubuntu-latest
    steps:
      - name: 🏴‍☠️ Checkout
        uses: actions/checkout@v3
      - name: 📦 Cache
        uses: actions/cache@v3
        with:
          path: ${{ env.DENO_DIR }}
          key: ${{ join([hashFiles('lock.json'), '-', matrix.deno, '-', matrix.os], '') }}
      - uses: denoland/setup-deno@v1.0.0
        with:
          deno-version: ${{ matrix.deno }}
      - name: 🔒 Lock
        run: deno task lock
        shell: bash
      - if: ${{ startsWith(matrix.os, 'ubuntu') && matrix.deno == 'canary' }}
        name: 🩺 Format
        uses: dprint/check@v2.0
      - if: ${{ startsWith(matrix.os, 'ubuntu') && matrix.deno == 'canary' }}
        name: 👩‍⚕️ Lint
        run: deno lint
      - name: 🩺 Typecheck
        run: deno task typecheck
        shell: bash
      - name: ✅ Unittest
        run: deno task test
        shell: bash
      - name: 📝 Docs
        run: deno task test:docs
        shell: bash
  publish:
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: 🏴‍☠️ Checkout
        uses: actions/checkout@v3
      - name: 📦 Cache
        uses: actions/cache@v3
        with:
          path: ${{ env.DENO_DIR }}
          key: ${{ join([hashFiles('lock.json'), '-', 'v1.x', '-', 'ubuntu-latest'], '') }}
      - uses: denoland/setup-deno@v1.0.0
        with:
          deno-version: v1.x
      - name: 🔒 Lock
        run: deno task lock
        shell: bash
      - name: 🦕 Publish
        run: deno task publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
